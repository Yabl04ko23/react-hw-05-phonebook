{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Notifications/Notifications.module.css","components/Filter/Filter.module.css","components/Notifications/Notifications.js","components/ContactForm/ContactForm.js","components/ContactsListItem/ContactsListItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","id","Notifications","disableAlert","doWarning","props","clearTimeout","setTimeout","Component","ContactForm","state","name","number","isInContacts","handleChange","target","value","setState","handleSubmit","evt","preventDefault","contactName","onSubmit","filter","contact","toLowerCase","length","this","className","required","type","placeholder","onChange","TransitionGroup","styles","notification","CSSTransition","timeout","classNames","msg","ContactsListItem","onDelete","contactItem","onClick","ContactList","contactsItem","onDeleteContact","component","contactsUl","map","Filter","filterValue","changeFilter","contacts","e","App","addContact","uuidv4","prevState","deleteContact","taskId","findContact","includes","localContacts","JSON","parse","localStorage","getItem","prevProps","setItem","stringify","foundContacts","in","appear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.06c5b9ed.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsUl\":\"ContactList_contactsUl__dK4Mm\",\"enter\":\"ContactList_enter__1bsm6\",\"enterActive\":\"ContactList_enterActive__11UVF\",\"exit\":\"ContactList_exit__2BLMa\",\"exitActive\":\"ContactList_exitActive__3xbV3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"Notifications_enter__1JfV3\",\"enterActive\":\"Notifications_enterActive__2z6ly\",\"exit\":\"Notifications_exit__3cVs_\",\"exitActive\":\"Notifications_exitActive__8xHhA\",\"notification\":\"Notifications_notification__3G8vz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"Filter_enter__1Pzg-\",\"enterActive\":\"Filter_enterActive__oBkxg\",\"exit\":\"Filter_exit__2M_qa\",\"exitActive\":\"Filter_exitActive__1c-29\",\"filter\":\"Filter_filter__1bFKK\"};","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nlet id;\r\nclass Notifications extends Component {\r\n  disableAlert = () => {\r\n    const { doWarning } = this.props;\r\n    doWarning(false);\r\n  };\r\n\r\n  componentDidMount() {\r\n    clearTimeout(id);\r\n  }\r\n\r\n  render() {\r\n    id = setTimeout(() => {\r\n      this.disableAlert();\r\n    }, 3000);\r\n\r\n    return <h2>Contact alredy exsist!</h2>;\r\n  }\r\n}\r\n\r\nNotifications.propTypes = {\r\n  doWarning: PropTypes.func,\r\n};\r\nexport default Notifications;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Notifications from \"../Notifications/Notifications\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\nimport styles from \"../Notifications/Notifications.module.css\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n    isInContacts: false,\r\n  };\r\n\r\n  handleChange = ({ target }) => {\r\n    const { name, value } = target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    const { contactName, onSubmit } = this.props;\r\n    const { name, number } = this.state;\r\n    contactName.filter((contact) => contact.name.toLowerCase() === name.toLowerCase()).length === 0\r\n      ? onSubmit(name, number)\r\n      : this.setState({ isInContacts: true });\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  doWarning = () => {\r\n    this.setState({ isInContacts: false });\r\n  };\r\n\r\n  render() {\r\n    const { name, number, isInContacts } = this.state;\r\n    return (\r\n      <>\r\n        <form className=\"contact-form\" onSubmit={this.handleSubmit}>\r\n          <label className=\"contact-label\">\r\n            Name\r\n            <input\r\n              className=\"contact-input\"\r\n              required\r\n              type=\"text\"\r\n              placeholder=\"Enter name\"\r\n              name=\"name\"\r\n              value={name}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n\r\n          <label className=\"contact-label\">\r\n            Number\r\n            <input\r\n              className=\"contact-input\"\r\n              required\r\n              type=\"text\"\r\n              placeholder=\"Enter number\"\r\n              name=\"number\"\r\n              value={number}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n          <button className=\"submit-Btn\" type=\"submit\">\r\n            Add contact\r\n          </button>\r\n        </form>\r\n        <TransitionGroup className={styles.notification}>\r\n          {isInContacts && (\r\n            <CSSTransition timeout={500} classNames={styles}>\r\n              <Notifications doWarning={this.doWarning} msg=\"Contact is already exist!\" />\r\n            </CSSTransition>\r\n          )}\r\n        </TransitionGroup>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n  contactName: PropTypes.array,\r\n};\r\n\r\nexport default ContactForm;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"../ContactList/ContactList.module.css\";\r\n\r\nclass ContactsListItem extends Component {\r\n  render() {\r\n    const { id, name, number, onDelete } = this.props;\r\n    return (\r\n      <li className={styles.contactItem} id={id}>\r\n        {name}: {number}{\" \"}\r\n        <button className=\"deleteBtn\" onClick={onDelete}>\r\n          Delete\r\n        </button>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nContactsListItem.propTypes = {\r\n  id: PropTypes.string,\r\n  name: PropTypes.string,\r\n  number: PropTypes.string,\r\n  onDelete: PropTypes.func,\r\n};\r\n\r\nexport default ContactsListItem;\r\n","import React, { Component } from \"react\";\r\nimport ContactsListItem from \"../ContactsListItem/ContactsListItem\";\r\nimport PropTypes from \"prop-types\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\nimport styles from \"./ContactList.module.css\";\r\n\r\nclass ContactList extends Component {\r\n  render() {\r\n    const { contactsItem, onDeleteContact } = this.props;\r\n    return (\r\n      <TransitionGroup component=\"ul\" className={styles.contactsUl}>\r\n        {contactsItem.map((contactsItem) => {\r\n          return (\r\n            <CSSTransition key={contactsItem.id} timeout={250} classNames={styles}>\r\n              <ContactsListItem\r\n                className=\"contactItem\"\r\n                name={contactsItem.name}\r\n                number={contactsItem.number}\r\n                onDelete={() => onDeleteContact(contactsItem.id)}\r\n              />\r\n            </CSSTransition>\r\n          );\r\n        })}\r\n      </TransitionGroup>\r\n    );\r\n  }\r\n}\r\n\r\nContactList.propTypes = {\r\n  contactsItem: PropTypes.array,\r\n  onDeleteContact: PropTypes.func,\r\n};\r\n\r\nexport default ContactList;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Filter.module.css\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\n\r\nclass Filter extends Component {\r\n  render() {\r\n    const { filterValue, changeFilter, contacts } = this.props;\r\n    return (\r\n      <>\r\n        <TransitionGroup component=\"div\">\r\n          {contacts.length > 1 && (\r\n            <CSSTransition  timeout={250} classNames={styles}>\r\n              <label className=\"contact-label\">\r\n                Find contacts by name\r\n                <input\r\n                  className=\"contact-input\"\r\n                  type=\"text\"\r\n                  placeholder=\"Enter name\"\r\n                  name=\"filter\"\r\n                  value={filterValue}\r\n                  onChange={(e) => changeFilter(e.target.value)}\r\n                />\r\n              </label>\r\n            </CSSTransition>\r\n          )}\r\n        </TransitionGroup>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nFilter.propTypes = {\r\n  filterValue: PropTypes.string,\r\n  changeFilter: PropTypes.func,\r\n};\r\n\r\nexport default Filter;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport Filter from \"./components/Filter/Filter\";\nimport { CSSTransition } from \"react-transition-group\";\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    let localContacts = JSON.parse(localStorage.getItem(\"contacts\"));\n    if (localContacts) {\n      this.setState(() => {\n        return { contacts: localContacts };\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState !== this.state.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  addContact = (name, number) => {\n    const contact = {\n      name,\n      number,\n      id: uuidv4(),\n    };\n\n    this.setState((prevState) => {\n      return {\n        contacts: [...prevState.contacts, contact],\n      };\n    });\n  };\n\n  deleteContact = (taskId) => {\n    this.setState((prevState) => {\n      return {\n        contacts: prevState.contacts.filter(({ id }) => id !== taskId),\n      };\n    });\n  };\n\n  changeFilter = (filter) => {\n    this.setState({ filter });\n  };\n\n  findContact = () => {\n    const { filter, contacts } = this.state;\n    return contacts.filter((contact) => contact.name.toLowerCase().includes(filter.toLowerCase()));\n  };\n\n  render() {\n    const { filter, contacts } = this.state;\n    const foundContacts = this.findContact();\n    return (\n      <>\n        <CSSTransition in={true} appear={true} timeout={250} classNames=\"Header\">\n          <h1>Phonebook</h1>\n        </CSSTransition>\n\n        <ContactForm onSubmit={this.addContact} contactName={contacts} />\n\n        <h2>Contacts</h2>\n        <Filter contacts={contacts} changeFilter={this.changeFilter} filterValue={filter} />\n        <ContactList contactsItem={foundContacts} onDeleteContact={this.deleteContact} />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}